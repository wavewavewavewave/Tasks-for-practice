{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h8/HW8.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/EditableSpan.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/AlternativeSuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior+.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Message","props","className","m","message","src","avatar","alt","ava","corner","content","name","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","p","filterAffairs","fl","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","addFromButton","inputClass","s","errorInput","input","value","onChange","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmed","currentTarget","trim","charCode","HW3","user","v1","setUsers","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","placeholder","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","AlternativeSuperCheckbox","Checkbox","color","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","initialState","age","homeWorkReducer","action","newState","sort","b","payload","reverse","f","initialPeople","HW8","people","setPeople","finalPeople","item","button","qwery","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","id","window","setInterval","HW9","LOADING","initState","isLoading","loadingAC","HW10","loading","useSelector","dispatch","useDispatch","setTimeout","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","HW11","value1","setValue1","value2","Junior","HardJunior","PATH","Routes2","path","exact","render","to","Header","header","link","activeClassName","active","block","HW5","Routes","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d7e48eca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3_mht\",\"active\":\"Header_active__5_BTM\",\"block\":\"Header_block__3Nygo\",\"header\":\"Header_header__1uCrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2Zkh-\",\"ava\":\"Message_ava__3Phsl\",\"name\":\"Message_name__ZrXlk\",\"corner\":\"Message_corner__1hluf\",\"content\":\"Message_content__1q7a-\",\"time\":\"Message_time__3Cr5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Greeting\":\"Greeting_Greeting__1uWrS\",\"someClass\":\"Greeting_someClass__2nhWT\",\"error\":\"Greeting_error___e3bC\",\"errorInput\":\"Greeting_errorInput__190qp\",\"input\":\"Greeting_input__1C2gW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1nI_I\",\"error\":\"SuperInputText_error__2TlNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HW8_item__1u_Ez\",\"button\":\"HW8_button__3RbD0\",\"qwery\":\"HW8_qwery__-WQu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3qE1C\",\"column\":\"HW4_column__19we9\",\"testSpanError\":\"HW4_testSpanError__2npQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Grx2\",\"red\":\"SuperButton_red__VGETY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1QVhe\",\"spanClassName\":\"SuperCheckbox_spanClassName__NY9K5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1NxRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"EditableSpan_span__2NnFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__T8tZS\"};","import React from 'react';\r\nimport m from './Message.module.css'\r\n\r\n\r\nexport type propsMessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n    // getMessageData: (message: string) => void\r\n\r\n}\r\n\r\n\r\nexport function Message(props: propsMessageType) {\r\n\r\n    // const getMessageData = () => {\r\n    //     return {\r\n    //         avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    //         name: 'September',\r\n    //         message: 'some text',\r\n    //         time: '22:00',\r\n    //     }\r\n    // }\r\n    //\r\n    //\r\n    // const title = getMessageData().name\r\n    // const time = getMessageData().time\r\n    // // const avatar = getMessageData().avatar\r\n    // // const message = getMessageData().message\r\n\r\n    return (\r\n        <div className={m.message}>\r\n            <div>\r\n                <img src={props.avatar} alt={'#props.avatar'} className={m.ava}/>\r\n            </div>\r\n\r\n            <div className={m.corner}/>\r\n\r\n            <div className={m.content}>\r\n                <div className={m.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n                <div className={m.time}>\r\n                    {props.time}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {Message} from \"./Message\";\r\n\r\nexport const messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n\r\n}\r\n\r\n\r\n// const  getMessageData = () => {\r\n//     return {\r\n//         avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n//         name: 'Some Name',\r\n//         message: 'some text',\r\n//         time: '22:00',\r\n//     }\r\n// }\r\n//\r\n//\r\n// const title = getMessageData().name\r\n// console.log(title)\r\n\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n\r\n            {/*<hr/>*/}\r\n            {/*/!*для личного творчества, могу проверить*!/*/}\r\n            {/*/!*<AlternativeMessage/>*!/*/}\r\n            {/*<hr/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {/*// show some text*/}\r\n\r\n            {props.affair.name}\r\n\r\n\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = { _id: number, name: string, priority: AffairPriorityType } // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return  affairs.filter(p => p.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number)  : Array<AffairType> => { // need to fix any\r\n    return defaultAffairs.filter(fl => fl._id !==_id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    addFromButton: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, addFromButton} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error ? s.errorInput : s.input // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.Greeting}>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n                   onKeyPress={addFromButton}\r\n            />\r\n            <div className={s.error}>{error}</div>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}: GreetingContainerPropsType) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmed = e.currentTarget.value.trim()\r\n        if (trimmed) {\r\n            setName(trimmed)\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError('NEPRAVELNII TITLE!!')\r\n        }\r\n\r\n\r\n        // need to fix\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name} !`) // need to fix\r\n    }\r\n\r\n    const addFromButton = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        if (e.charCode === 13) {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length  // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            addFromButton={addFromButton}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport {v1} from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    let user = v1()\r\n\r\n    const [users, setUsers] = useState<UserType[]>([{_id: user, name: 'Nikita'}]) // need to fix any\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([{_id: user, name: name}, ...users]) // need to fix\r\n    }\r\n\r\n    /*    const newTodolistId = v1()\r\n        setTodolists([{id: newTodolistId, title: title, filter: \"all\"},...todolists])\r\n        setTasks({...tasks, [newTodolistId]: []})*/\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.superInput}>\r\n            <input\r\n                type={'text'}\r\n                placeholder={'Write here...'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            </div>\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\nimport styled from 'styled-components'\r\n\r\n\r\n// const Button = styled.button`\r\n//   background-color: #3949ab;\r\n//   border-radius: 5px;\r\n//   color: white;\r\n//   margin: 0 1px;\r\n//   padding: 5px 15px;\r\n//   outline: 0;\r\n//   box-shadow: 0px 2px 2px lightgray;\r\n//   cursor: pointer;\r\n//   text-transform: uppercase;\r\n// `\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n\r\n    // <Button className={finalClassName}\r\n    // {...restProps}></Button>\r\n\r\n)\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react'\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nfunction AlternativeSuperCheckbox() {\r\n    return (\r\n        <div>\r\n            <input/>\r\n            <Checkbox color=\"success\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeSuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\nimport AlternativeSuperButton from \"./common/c2-SuperButton/AlternativeSuperButton\";\r\nimport AlternativeSuperInputText from \"./common/c1-SuperInputText/AlternativeSuperInputText\";\r\nimport AlternativeSuperCheckbox from \"./common/c3-SuperCheckbox/AlternativeSuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            <AlternativeSuperCheckbox/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './EditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n         setEditMode(false) // выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n         setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n         setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className ? className: ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        %{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>( 'editable-span-value', ''))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n     <option key={o + '-' + i} value={o}>{o}</option>\r\n    )): [] // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                checked={o === value}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from \"../HW8\";\r\n\r\nexport type SortPeopleActionType = {\r\n    type: 'sort',\r\n    payload: string\r\n}\r\nexport type CheckPeopleActionType = {\r\n    type: 'check'\r\n    payload: number\r\n}\r\n\r\nlet initialState: Array<UserType> = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\n\r\nexport const homeWorkReducer = (state: Array<UserType> = initialState, action: ActionsType): Array<UserType> => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n           //const newState =  [...state].sort((a, b) => a.name > b.name ? 1 : -1)\r\n            const newState = [...state].sort((a, b) => {\r\n                if (a.name > b.name) return 1;\r\n                else if (a.name < b.name) return -1;\r\n                else return 0\r\n            })\r\n            return action.payload === 'up' ? newState : newState.reverse()\r\n        }\r\n        case 'check': {\r\n            return state.filter(f => f.age >= action.payload)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionsType = SortPeopleActionType | CheckPeopleActionType\r\n\r\nexport const SortPeopleAC = (payload: string): SortPeopleActionType => {\r\n    return {\r\n        type: 'sort',\r\n        payload,\r\n    }\r\n}\r\nexport const CheckPeopleAC = (payload: number): CheckPeopleActionType => {\r\n    return {\r\n        type: \"check\",\r\n        payload,\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport s from '../h8/HW8.module.css'\r\n\r\nexport type UserType = {\r\n    _id: number,\r\n    name: string,\r\n    age: number\r\n}\r\n\r\nconst initialPeople: UserType[] = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<UserType[]>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: UserType) => (\r\n        <div key={p._id} className={s.item}>\r\n            <span>{p.name}</span>\r\n            {p.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n            <div className={s.button}>\r\n                <div className={s.qwery}><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n                <div className={s.qwery}><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n                <div className={s.qwery}><SuperButton onClick={check18}>check 18</SuperButton></div>\r\n            </div>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport s from './HW9.module.css'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            /*let now = date.toLocaleTimeString()*/\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        // show\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        // close\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = date?.toLocaleTimeString() // fix with date\r\n    const stringDate = date?.toLocaleDateString()// fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div >\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","const LOADING = 'IS_LOADING';\r\n\r\ntype initStateType = {\r\n    isLoading: boolean\r\n}\r\nconst initState: initStateType = {\r\n    isLoading: false\r\n}\r\n\r\n\r\nexport const loadingReducer = (state: initStateType = initState, action: LoadingReducerType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type LoadingReducerType = LoadingACType\r\n\r\nexport type LoadingACType = ReturnType<typeof loadingAC>\r\nexport const loadingAC = (isLoading: boolean) => {\r\n    return {\r\n        type: 'IS_LOADING',\r\n        isLoading,\r\n    } as const\r\n} // fix any","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loadingAC} from \"./bll/loadingReducer\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport s from \"./HW10.module.css\"\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const loading  = useSelector<AppStoreType, boolean>(state => state.loading.isLoading)\r\n    const dispatch = useDispatch()\r\n    /*const = false*/\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n\r\n        // setTimeout\\\r\n        setTimeout(() => {\r\n            dispatch(loadingAC(false))\r\n        }, 1500)\r\n        console.log('loading...')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div>крутилка...</div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    return (\r\n        <>\r\n            <input type={'range'}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\nimport Slider, {} from 'rc-slider'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0)\r\n    const [value2, setValue2] = useState(100)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    onChangeRange={setValue1}\r\n                    // сделать так чтоб value1 изменялось\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperDoubleRange\r\n                    value={[value1, value2]}\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                />\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            junior\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction HardJunior() {\r\n    return (\r\n        <div>\r\n            junior+\r\n            {/*<HW12/>*/}\r\n            {/*<HW13/>*/}\r\n            {/*<HW14/>*/}\r\n            {/*<HW15/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HardJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport HardJunior from \"./pages/Junior+\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    HARD_JUNIOR: '/hard-junior'\r\n    // add paths\r\n}\r\n\r\nfunction Routes2() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.HARD_JUNIOR} render={() => <HardJunior/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes2\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"./Routes\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>PreJunior</NavLink>\r\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>Junior</NavLink>\r\n            <NavLink to={PATH.HARD_JUNIOR} className={s.link} activeClassName={s.active}>Junior+</NavLink>\r\n            <div className={s.block}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes2 from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nexport const HW5 = () => {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes2/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport {HW5} from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import {loadingReducer} from './loadingReducer'\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}